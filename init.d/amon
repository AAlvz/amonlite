#!/usr/bin/python
import sys, time
from amon.daemon import Daemon
from amon.backends.pyredis import AmonRedisBackend
from amon.runner import AmonRunner

PIDFILE = '/tmp/amon.pid'

class AmonDaemon(Daemon):
	
	def run(self):
		
		try:
			runner = AmonRunner()
		except:
			pass
		
		try:
			backend = AmonRedisBackend()
		except:
			pass
		
		while True:
			system_info = runner.run()
			try:			
				backend.save_dict(system_info)
			except:			
				pass

			time.sleep(60)

if __name__ == "__main__":

	daemon = AmonDaemon(PIDFILE)
	
	if len(sys.argv) == 2:
		if 'start' == sys.argv[1]:
			try:
				daemon.start()
			except:
				pass
		elif 'stop' == sys.argv[1]:
			print "Stopping Amon ..."
			daemon.stop()
		elif 'restart' == sys.argv[1]:
			print "Restaring Amon ..."
			daemon.restart()
		elif 'status' == sys.argv[1]:
			try:
				pf = file(PIDFILE,'r')
				pid = int(pf.read().strip())
				pf.close()
			except IOError:
				pid = None
			except SystemExit:
				pid = None

			if pid:
				print 'Amon is running as pid %s' % pid
			else:
				print 'Amon is not running.'
		
		else:
			print "Unknown command"
			sys.exit(2)
			sys.exit(0)
	else:
		print "usage: %s start|stop|restart|status" % sys.argv[0]
		sys.exit(2)

